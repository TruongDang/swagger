#import <Foundation/Foundation.h>
#import "SWGCacheRequest.h"
#import "SWGKeyBody.h"
#import "SWGCache.h"
#import "SWGCacheItem.h"
#import "SWGObject.h"
#import "SWGApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface SWGCloudCacheApi: NSObject

@property(nonatomic, assign)SWGApiClient *apiClient;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(SWGCloudCacheApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(SWGCloudCacheApi*) sharedAPI;
///
///
/// clear all items from a cloud cache
/// clear all items from a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param body master key of app
/// 
///
/// @return NSArray<SWGCacheRequest>*
-(NSNumber*) clearCacheWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSArray<SWGCacheRequest>* output, NSError* error)) handler;


///
///
/// create a cloud cache
/// create a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param body master key of app
/// 
///
/// @return SWGCache*
-(NSNumber*) createCacheWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(SWGCache* output, NSError* error)) handler;


///
///
/// delete all CloudCaches
/// delete all CloudCaches
///
/// @param appId Id of CloudApp
/// @param body master key of app
/// 
///
/// @return NSArray<SWGCacheRequest>*
-(NSNumber*) deleteAllCacheWithAppId: (NSString*) appId
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSArray<SWGCacheRequest>* output, NSError* error)) handler;


///
///
/// delete a CloudCache
/// delete a CloudCache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param body master key of app
/// 
///
/// @return SWGCacheRequest*
-(NSNumber*) deleteCacheWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(SWGCacheRequest* output, NSError* error)) handler;


///
///
/// delete item from a cloud cache
/// delete item from a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param dataKey key under which data to delete is cached
/// @param body master key of app
/// 
///
/// @return NSString*
-(NSNumber*) deleteItemWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    dataKey: (NSString*) dataKey
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


///
///
/// get all CloudCaches
/// get all CloudCaches
///
/// @param appId Id of CloudApp
/// @param body master key of app
/// 
///
/// @return NSArray<SWGCache>*
-(NSNumber*) getAllCacheWithAppId: (NSString*) appId
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSArray<SWGCache>* output, NSError* error)) handler;


///
///
/// get all items from a cloud cache
/// get all items from a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param body master key of app
/// 
///
/// @return NSArray<SWGCacheItem>*
-(NSNumber*) getAllItemsWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSArray<SWGCacheItem>* output, NSError* error)) handler;


///
///
/// get info about a CloudCache
/// get info about a CloudCache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param body master key of app
/// 
///
/// @return SWGCache*
-(NSNumber*) getCacheInfoWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(SWGCache* output, NSError* error)) handler;


///
///
/// get item from a cloud cache
/// get item from a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param dataKey key under which data should be got in cache
/// @param body master key of app
/// 
///
/// @return NSString*
-(NSNumber*) getItemWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    dataKey: (NSString*) dataKey
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


///
///
/// count items in a cloud cache
/// count items in a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param body master key of app
/// 
///
/// @return NSNumber*
-(NSNumber*) getItemsCountWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    body: (SWGKeyBody*) body
    completionHandler: (void (^)(NSNumber* output, NSError* error)) handler;


///
///
/// add item to a cloud cache
/// add item to a cloud cache
///
/// @param appId Id of CloudApp
/// @param cacheName Name of cache
/// @param dataKey key under which data should be store in cache
/// @param body cache data and master key included got from this object
/// 
///
/// @return NSString*
-(NSNumber*) setWithAppId: (NSString*) appId
    cacheName: (NSString*) cacheName
    dataKey: (NSString*) dataKey
    body: (SWGCacheRequest*) body
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;



@end
